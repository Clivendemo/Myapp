// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart';
import 'package:firebase_core/firebase_core.dart';
//import 'firebase_options.dart';
import 'package:flutter/material.dart';

// ...


   // show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(MyApp());
}

/// A minimal MyApp widget to allow the app to run without errors.
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Firebase App',
      home: Scaffold(
        appBar: AppBar(title: Text('Firebase App')),
        body: Center(child: Text('Hello, Firebase!')),
      ),
    );
  }
}
  
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAnLBSMjfwl_QrCL4si9G_5Wh2g5P2Qteg',
    appId: '1:95600051674:web:4cdb7c5569807c46642ce3',
    messagingSenderId: '95600051674',
    projectId: 'edunjema3',
    authDomain: 'edunjema3.firebaseapp.com',
    storageBucket: 'edunjema3.firebasestorage.app',
    measurementId: 'G-939QHZ3V45',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAMWW_at2f57DtVL6PRa1PRgnXjxLGdO3s',
    appId: '1:95600051674:android:e942082f3126de40642ce3',
    messagingSenderId: '95600051674',
    projectId: 'edunjema3',
    storageBucket: 'edunjema3.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAirDkmrazcU8wuoLX0GVx5VFxWjmVT1LU',
    appId: '1:95600051674:ios:c294dbb676355bfd642ce3',
    messagingSenderId: '95600051674',
    projectId: 'edunjema3',
    storageBucket: 'edunjema3.firebasestorage.app',
    iosBundleId: 'com.example.edunjema3',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyAirDkmrazcU8wuoLX0GVx5VFxWjmVT1LU',
    appId: '1:95600051674:ios:c294dbb676355bfd642ce3',
    messagingSenderId: '95600051674',
    projectId: 'edunjema3',
    storageBucket: 'edunjema3.firebasestorage.app',
    iosBundleId: 'com.example.edunjema3',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyAnLBSMjfwl_QrCL4si9G_5Wh2g5P2Qteg',
    appId: '1:95600051674:web:4ac0acf6995af443642ce3',
    messagingSenderId: '95600051674',
    projectId: 'edunjema3',
    authDomain: 'edunjema3.firebaseapp.com',
    storageBucket: 'edunjema3.firebasestorage.app',
    measurementId: 'G-BBXZMZME51',
  );


}